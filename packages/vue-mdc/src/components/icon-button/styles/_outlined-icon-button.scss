//
// Copyright 2022 Google LLC
// SPDX-License-Identifier: Apache-2.0
//
// [Modified by Sandlada & Kai Orion]
//
// Copyright 2025 Sandlada & Kai Orion
// SPDX-License-Identifier: MIT
//

@use 'sass:map';
@use '../../../themes';
@use '../../../tokens';
@use './shared';

@mixin styles() {
    $tokens: tokens.md-comp-outlined-icon-button-values();

    & {
        // Only use the logical properties.
        $tokens: map.remove($tokens, 'container-shape');

        @each $token, $value in $tokens {
            --_#{$token}: #{$value};
        }

        @include themes.md-comp-ripple-theme(
            (
                hover-color: var(--_hover-state-layer-color),
                hover-opacity: var(--_hover-state-layer-opacity),
                pressed-color: var(--_pressed-state-layer-color),
                pressed-opacity: var(--_pressed-state-layer-opacity),
            )
        );
    }

    & .outline {
        border-radius: inherit;
        inset: 0;
        position: absolute;
        z-index: -1;
        border-style: solid;
    }

    /* Outline - Outline Width */

    &.extra-small .outline {
        border-width: var(--_extra-small-outline-width);
    }
    &.small .outline {
        border-width: var(--_small-outline-width);
    }
    &.medium .outline {
        border-width: var(--_medium-outline-width);
    }
    &.large .outline {
        border-width: var(--_large-outline-width);
    }
    &.extra-large .outline {
        border-width: var(--_extra-large-outline-width);
    }

    /* Outline - Color */

    & .outline {
        border-color: var(--_outline-color);
    }
    &.togglable.selected .outline {
        border-color: var(--_toggle-selected-outline-color);
    }
    &.togglable.unselected .outline {
        border-color: var(--_toggle-unselected-outline-color);
    }


    /* Disabled - Background */

    &.togglable.disabled .outline,
    &.disabled .outline {
        border-color: var(--_disabled-outline-color);
    }

    @media (forced-colors: active) {
        .disabled,
        &[disabled] {
            --_disabled-outline-opacity: 1;
        }

        // Selected button in HCM has an outline.
        &.selected {
            & .outline {
                border-color: CanvasText;
                border-width: var(--_outline-width);
            }

            &:is(:disabled, .disabled, [disabled]) .background {
                border-color: GrayText;
                opacity: 1;
            } 
        }
    }
}
